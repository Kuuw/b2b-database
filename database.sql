SET ANSI_NULLS ON;
SET QUOTED_IDENTIFIER ON;

CREATE TABLE Statuses (
    StatusId UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    StatusName NVARCHAR(127) NOT NULL UNIQUE,
    Description NVARCHAR(255) NULL,
    CreatedAt DATETIME DEFAULT GETDATE() NOT NULL,
    UpdatedAt DATETIME DEFAULT GETDATE() NOT NULL
);

CREATE TABLE Countries (
    CountryId UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    CountryName NVARCHAR(50) NOT NULL UNIQUE,
    PhoneCode INT NOT NULL,
    CreatedAt DATETIME DEFAULT GETDATE() NOT NULL,
    UpdatedAt DATETIME DEFAULT GETDATE() NOT NULL
);

CREATE TABLE AddressTypes (
    AddressTypeId UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    TypeName NVARCHAR(50) NOT NULL UNIQUE,
    Description NVARCHAR(255) NULL,
    CreatedAt DATETIME DEFAULT GETDATE() NOT NULL,
    UpdatedAt DATETIME DEFAULT GETDATE() NOT NULL
);

CREATE TABLE Addresses (
    AddressId UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    CompanyId UNIQUEIDENTIFIER NULL,
    UserId UNIQUEIDENTIFIER NULL,
    AddressTypeId UNIQUEIDENTIFIER NOT NULL,
    StreetAddress NVARCHAR(255) NOT NULL,
    City NVARCHAR(127) NOT NULL,
    State NVARCHAR(127) NOT NULL,
    PostalCode NVARCHAR(20) NOT NULL,
    CountryId UNIQUEIDENTIFIER NOT NULL,
    PhoneNumber NVARCHAR(20) NULL,
    IsDefault BIT NOT NULL DEFAULT 0,
    CreatedAt DATETIME DEFAULT GETDATE() NOT NULL,
    UpdatedAt DATETIME DEFAULT GETDATE() NOT NULL,

    CONSTRAINT FK_Addresses_Country FOREIGN KEY (CountryId) REFERENCES Countries(CountryId),
    CONSTRAINT FK_Addresses_AddressType FOREIGN KEY (AddressTypeId) REFERENCES AddressTypes(AddressTypeId)
);

CREATE TABLE Companies (
    CompanyId UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    CompanyName NVARCHAR(127) NOT NULL,
    TaxNumber NVARCHAR(127) UNIQUE NOT NULL,
    AddressId UNIQUEIDENTIFIER NOT NULL,
    Email NVARCHAR(127) UNIQUE NOT NULL,
    Website NVARCHAR(255) NULL,
    StatusId UNIQUEIDENTIFIER NOT NULL,
    LogoURL NVARCHAR(255) NULL,
    CreatedAt DATETIME DEFAULT GETDATE() NOT NULL,
    UpdatedAt DATETIME DEFAULT GETDATE() NOT NULL,

    CONSTRAINT FK_Companies_Address FOREIGN KEY (AddressId) REFERENCES Addresses(AddressId),
    CONSTRAINT FK_Companies_Status FOREIGN KEY (StatusId) REFERENCES Statuses(StatusId)
);

CREATE TABLE Roles (
    RoleId UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    RoleName NVARCHAR(127) NOT NULL UNIQUE,
    Description NVARCHAR(255) NULL,
    CreatedAt DATETIME DEFAULT GETDATE() NOT NULL,
    UpdatedAt DATETIME DEFAULT GETDATE() NOT NULL
);

CREATE TABLE Users (
    UserId UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    CompanyId UNIQUEIDENTIFIER NOT NULL,
    FirstName NVARCHAR(127) NOT NULL,
    LastName NVARCHAR(127) NOT NULL,
    Email NVARCHAR(255) UNIQUE NOT NULL,
    PhoneNumber NVARCHAR(20) UNIQUE NULL,
    PasswordHash NVARCHAR(255) NOT NULL,
    RoleId UNIQUEIDENTIFIER NOT NULL,
    StatusId UNIQUEIDENTIFIER NOT NULL,
    ProfileImageUrl NVARCHAR(255) NULL,
    CreatedAt DATETIME DEFAULT GETDATE() NOT NULL,
    UpdatedAt DATETIME DEFAULT GETDATE() NOT NULL,
    LastLoginAt DATETIME NULL,

    CONSTRAINT FK_Users_Company FOREIGN KEY (CompanyId) REFERENCES Companies(CompanyId),
    CONSTRAINT FK_Users_Role FOREIGN KEY (RoleId) REFERENCES Roles(RoleId),
    CONSTRAINT FK_Users_Status FOREIGN KEY (StatusId) REFERENCES Statuses(StatusId)
);

CREATE TABLE Permissions (
    PermissionId UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    PermissionName NVARCHAR(127) NOT NULL UNIQUE,
    Description NVARCHAR(255) NULL,
    CreatedAt DATETIME DEFAULT GETDATE() NOT NULL,
    UpdatedAt DATETIME DEFAULT GETDATE() NOT NULL
);

CREATE TABLE RolePermissions (
    RoleId UNIQUEIDENTIFIER NOT NULL,
    PermissionId UNIQUEIDENTIFIER NOT NULL,

    PRIMARY KEY (RoleId, PermissionId),
    CONSTRAINT FK_RolePermissions_Role FOREIGN KEY (RoleId) REFERENCES Roles(RoleId),
    CONSTRAINT FK_RolePermissions_Permission FOREIGN KEY (PermissionId) REFERENCES Permissions(PermissionId)
);

CREATE TABLE Orders (
    OrderId UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    UserId UNIQUEIDENTIFIER NOT NULL,
    StatusId UNIQUEIDENTIFIER NOT NULL,
    ShippingAddressId UNIQUEIDENTIFIER NOT NULL,
    InvoiceAddressId UNIQUEIDENTIFIER NOT NULL,
    CreatedAt DATETIME DEFAULT GETDATE() NOT NULL,
    UpdatedAt DATETIME DEFAULT GETDATE() NOT NULL,

    CONSTRAINT FK_Orders_User FOREIGN KEY (UserId) REFERENCES Users(UserId),
    CONSTRAINT FK_Orders_Status FOREIGN KEY (StatusId) REFERENCES Statuses(StatusId)
);

CREATE TABLE Invoices (
    InvoiceId UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    OrderId UNIQUEIDENTIFIER NOT NULL,
    CompanyId UNIQUEIDENTIFIER NOT NULL,
    InvoiceAddressId UNIQUEIDENTIFIER NOT NULL,
    TotalAmount FLOAT NOT NULL,
    TaxAmount FLOAT NOT NULL,
    Currency NVARCHAR(10) NOT NULL,
    StatusId UNIQUEIDENTIFIER NOT NULL,
    CreatedAt DATETIME DEFAULT GETDATE() NOT NULL,
    UpdatedAt DATETIME DEFAULT GETDATE() NOT NULL,

    CONSTRAINT FK_Invoices_Order FOREIGN KEY (OrderId) REFERENCES Orders(OrderId),
    CONSTRAINT FK_Invoices_Company FOREIGN KEY (CompanyId) REFERENCES Companies(CompanyId)
);

CREATE TABLE Payments (
    PaymentId UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    InvoiceId UNIQUEIDENTIFIER NOT NULL,
    PaymentDate DATETIME NOT NULL,
    Amount FLOAT NOT NULL,
    Currency NVARCHAR(10) NOT NULL,
    TransactionReference NVARCHAR(100) NOT NULL,
    CreatedAt DATETIME DEFAULT GETDATE() NOT NULL,
    UpdatedAt DATETIME DEFAULT GETDATE() NOT NULL,

    CONSTRAINT FK_Payments_Invoice FOREIGN KEY (InvoiceId) REFERENCES Invoices(InvoiceId)
);

CREATE TABLE Categories (
    CategoryId UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    CategoryName NVARCHAR(50) NOT NULL UNIQUE,
    CategoryDescription NVARCHAR(255) NULL,
    CreatedAt DATETIME DEFAULT GETDATE() NOT NULL,
    UpdatedAt DATETIME DEFAULT GETDATE() NOT NULL
);

CREATE TABLE Products (
    ProductId UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    ProductName NVARCHAR(127) NOT NULL,
    ProductCode NVARCHAR(50) UNIQUE NOT NULL,
    Description NVARCHAR(255) NULL,
    CategoryId UNIQUEIDENTIFIER NOT NULL,
    Price FLOAT NOT NULL CHECK (Price >= 0),
    Currency NVARCHAR(10) NOT NULL,
    StatusId UNIQUEIDENTIFIER NOT NULL,
    MinOrderQuantity INT NOT NULL CHECK (MinOrderQuantity > 0),
    CreatedAt DATETIME DEFAULT GETDATE() NOT NULL,
    UpdatedAt DATETIME DEFAULT GETDATE() NOT NULL,

    CONSTRAINT FK_Products_Category FOREIGN KEY (CategoryId) REFERENCES Categories(CategoryId),
    CONSTRAINT FK_Products_Status FOREIGN KEY (StatusId) REFERENCES Statuses(StatusId)
);

CREATE TABLE OrderItems (
    OrderId UNIQUEIDENTIFIER NOT NULL,
    ProductId UNIQUEIDENTIFIER NOT NULL,
    Quantity INT NOT NULL CHECK (Quantity > 0),
    Price FLOAT NOT NULL,
    Currency NVARCHAR(10) NOT NULL,

    PRIMARY KEY (OrderId, ProductId),
    CONSTRAINT FK_OrderItems_Order FOREIGN KEY (OrderId) REFERENCES Orders(OrderId),
    CONSTRAINT FK_OrderItems_Product FOREIGN KEY (ProductId) REFERENCES Products(ProductId)
);

CREATE TABLE ProductStocks (
    ProductId UNIQUEIDENTIFIER PRIMARY KEY,
    StockQuantity INT NOT NULL CHECK (StockQuantity >= 0),
    UpdatedAt DATETIME DEFAULT GETDATE() NOT NULL,

    CONSTRAINT FK_ProductStocks_Product FOREIGN KEY (ProductId) REFERENCES Products(ProductId)
);

CREATE TABLE DiscountTypes (
    DiscountTypeID      UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
    DiscountTypeName    VARCHAR(50)      NOT NULL,
    CONSTRAINT PK_DiscountTypes PRIMARY KEY (DiscountTypeID),
    CONSTRAINT UQ_DiscountTypes_DiscountTypeName UNIQUE (DiscountTypeName)
);

CREATE TABLE Discounts (
    DiscountID      UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
    DiscountTypeID  UNIQUEIDENTIFIER NOT NULL,
    DiscountValue   DECIMAL(5,2)     NOT NULL,
    Description     VARCHAR(200)     NULL,
    CONSTRAINT PK_Discounts PRIMARY KEY (DiscountID),
    CONSTRAINT FK_Discounts_DiscountTypeID FOREIGN KEY (DiscountTypeID) REFERENCES DiscountTypes(DiscountTypeID)
);

CREATE TABLE LogTypes (
    LogTypeID       UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
    LogTypeName     VARCHAR(50)      NOT NULL,
    CONSTRAINT PK_LogTypes PRIMARY KEY (LogTypeID),
    CONSTRAINT UQ_LogTypes_LogTypeName UNIQUE (LogTypeName)
);

CREATE TABLE Logs (
    LogID       UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
    LogTypeID   UNIQUEIDENTIFIER NOT NULL,
    UserID      UNIQUEIDENTIFIER NOT NULL,
    LogMessage  VARCHAR(500)     NOT NULL,
    CreatedAt   DATETIME         NOT NULL DEFAULT GETDATE(),
    CONSTRAINT PK_Logs PRIMARY KEY (LogID),
    CONSTRAINT FK_Logs_LogTypeID FOREIGN KEY (LogTypeID) REFERENCES LogTypes(LogTypeID),
    CONSTRAINT FK_Logs_UserID FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

CREATE TABLE ProductImage (
    ProductImageID  UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
    ProductID       UNIQUEIDENTIFIER NOT NULL,
    ImageURL        VARCHAR(200)     NOT NULL,
    CreatedAt       DATETIME         NOT NULL DEFAULT GETDATE(),
    CONSTRAINT PK_ProductImage PRIMARY KEY (ProductImageID),
    CONSTRAINT FK_ProductImage_ProductID FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);